MODEL:
  META_ARCHITECTURE: "RetinaNet"
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/efficientnet-b0-355c32eb.pth"
  BACKBONE:
    NAME: "build_retinanet_ednet_fpn_backbone"
  RESNETS:
    OUT_FEATURES: ["res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 1.5
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (240000, 320000)
  MAX_ITER: 360000
  WARMUP_ITERS: 4000
  WARMUP_FACTOR: 0.00025
INPUT:
  MIN_SIZE_TRAIN: (512, 512)
OUTPUT_DIR: "./output/test"
